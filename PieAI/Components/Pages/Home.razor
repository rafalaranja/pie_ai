@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>
<div class=" d-flex justify-content-center pt-5 pb-5">
</div>

<!-- Main Container -->
<div class="d-flex justify-content-around pt-5 pb-5">

    <!-- Container da esquerda -->
    <div class="d-flex justify-content-center flex-column">
        <!-- Container do botão -->
        <div class="d-flex justify-content-center pb-5">
            <button class="btn btn-dark">Review Metrics</button>
        </div>
        <!-- Container da tabela -->
        <div class="d-flex justify-content-center">
            <table class="table table-striped">
                <thead class="table-secondary">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Current</th>
                        <th scope="col">Recommended</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var suggestion in suggestions)
                    {
                        <tr>
                            <td>@suggestion.Name</td>
                            <td>@suggestion.Current</td>
                            <td>@suggestion.Recomended</td>
                            <td>
                                <button class="btn btn-success" @onclick="() => ClearLine(suggestion)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                        <path d="m10.97 4.97-.02.022-3.473 4.425-2.093-2.094a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05" />
                                    </svg>
                                </button><button class="btn btn-danger ms-1" @onclick="() => ClearLine(suggestion)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div> 
    </div>



    <!-- Container da direita -->
    <div class="d-flex justify-content-center flex-column">
        <!-- Container do botão -->
        <div class="d-flex justify-content-center pb-3">
            <button class="btn btn-dark" @onclick="GeneratePlan">Generate Plan</button>
        </div>
        <!-- Container da tabela -->
        <div class="d-flex justify-content-center flex-column">
            <!-- Container do id e data -->
            <div class="d-flex justify-content-between">
                <p>Id: 3</p>
                <p>Date: 29/01</p>
            </div>
            <!-- Container inline -->
            <div class="d-flex d-inline-flex">
                <!-- Container raw material -->
                <div class="d-flex justify-content-center p-2">
                    <textarea class="form-control " rows="8" cols="30" value="@response" readonly style="resize: none;"></textarea>
                </div>
                <!-- Container orders -->
                <div class="d-flex justify-content-center p-2">
                    <textarea class="form-control " rows="8" cols="30" value="@response" readonly style="resize: none;"></textarea>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- ChatBot -->
<div>
    <div class="d-flex justify-content-end pt-5 pb-5">
        <button class="btn btn-dark btn-outline-light" @onclick="ToggleChat">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-robot" viewBox="0 0 16 16">
                <path d="M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5M3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.6 26.6 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.93.93 0 0 1-.765.935c-.845.147-2.34.346-4.235.346s-3.39-.2-4.235-.346A.93.93 0 0 1 3 9.219zm4.542-.827a.25.25 0 0 0-.217.068l-.92.9a25 25 0 0 1-1.871-.183.25.25 0 0 0-.068.495c.55.076 1.232.149 2.02.193a.25.25 0 0 0 .189-.071l.754-.736.847 1.71a.25.25 0 0 0 .404.062l.932-.97a25 25 0 0 0 1.922-.188.25.25 0 0 0-.068-.495c-.538.074-1.207.145-1.98.189a.25.25 0 0 0-.166.076l-.754.785-.842-1.7a.25.25 0 0 0-.182-.135" />
                <path d="M8.5 1.866a1 1 0 1 0-1 0V3h-2A4.5 4.5 0 0 0 1 7.5V8a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1v1a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1v-.5A4.5 4.5 0 0 0 10.5 3h-2zM14 7.5V13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.5A3.5 3.5 0 0 1 5.5 4h5A3.5 3.5 0 0 1 14 7.5" />
            </svg>
            ChatBot
        </button>
    </div>
</div>

@if (showChat)
{
    <div class="chat-window border rounded shadow p-3 bg-light" style="position: fixed; bottom: 100px; right: 40px; width: 350px; z-index: 1050;">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <strong>ChatBot</strong>
            <button class="btn btn-sm btn-outline-danger" @onclick="ToggleChat">X</button>
        </div>
        <div style="height: 200px; overflow-y: auto;">
            <!-- Render all chat messages -->
            @foreach (var message in chatMessages)
            {
                var isEven = chatMessages.IndexOf(message) % 2 == 0;
                if (isEven)
                {
                    <div class="d-flex justify-content-end p-2 m-2 bg-dark text-white rounded">@message</div>
                    continue;
                }

                <div class="d-flex justify-content-start p-2 m-2 bg-white text-dar rounded">@message</div>
            }
        </div>
        <div class="mt-2 d-flex">
            <input class="form-control me-2"
                   placeholder="Type your message..."
                   @bind="chatInput"
                   @onkeydown="HandleInputKeyDown" />
            <button class="btn btn-success" @onclick="SendMessage">Send</button>
        </div>
    </div>
}



<!-- Código C# -->
@code {
    public string response = "";
    private bool showChat = false;

    // Chat state
    private List<string> chatMessages = new();
    private string chatInput = string.Empty;

    //Recommendations Table
    private List<Suggestion> suggestions = new() { new Suggestion { Name = "linda", Current = "1", Recomended = "2" }, new Suggestion { Name = "noodles", Current = "2", Recomended = "1" } };

    ApiServiceTest apiService = new ApiServiceTest();

    private async Task GeneratePlan()
    {
      //  response = await apiService.GeneratePlan();
    }

    private void ToggleChat()
    {
        showChat = !showChat;
    }

    public void ClearLine(Suggestion suggestion)
    {
        suggestions.Remove(suggestion);
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(chatInput))
        {
            chatMessages.Add(chatInput);
            var msg = chatInput;
            chatInput = string.Empty;
            chatMessages.Add(await apiService.SendPromptWithKnowledgeBase(msg));
        }
    }

    private async Task GetSuggestions()
    {
       // var suggestionsFromApi = await apiService.GetSuggestions();

        // foreach (var suggestion in suggestionsFromApi)
        // {
        //     if(!suggestions.Any(s => s.Name == suggestion.Name))
        //         suggestions.Add(suggestion);
        // }
    }

    private void HandleInputKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SendMessage();
        }
    }
}